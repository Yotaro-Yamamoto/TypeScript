名前空間
名前の衝突問題
利用したいモジュールの間で同じ名前の機能が存在する場合、名前の重複を回避するために
別名をつけてインポートするのは不便である。
たとえば、惑星に関する情報が収録されたモジュールｎ中から、地球と太陽の半径を利用する
場面を考えてみよう。地球も太陽も半径をRADIUSという変数名で公開している。この場合、
インポート側で名前を変えなければコンパイルエラーになる。

./app.ts
//名前が重複するのでコンパイルエラー
import { RADIUS } from "./planet/earth.js";
import { RADIUS } from "./planet/sun.js";
//コンパイルエラーを回避すると名前が長くなってしまう
import { MOON_RADIUS } from "./planet/earth.js";
import { SUN_RADIUS } from "./planet/sun.js";

定数RADIUSはオブジェクトのプロパティではないが、名前空間を導入すると、Earth.RADIUS、
Sun.RADIUSのように(まるでEarthやSunというオブジェクトがあるかのように)記述することができる。

名前空間の導入
namespaceを使うと、名前ごとに固有のスコープが与えられる。{}内で定義した機能は同じ名前のスコープを
配下に入ることから、名前空間と呼ばれる。
書式
namespace 名前 {}

地球モジュールにEarthという名前空間を導入し、外部プログラムから名前空間を利用できるようにエクスポート
してみよう。