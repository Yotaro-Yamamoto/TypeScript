//静的プロパティ
//クラスに従属するからプロパティ
//プロパティの前にstaticをつけると、静的プロパティになる。
/*書式
[アクセス修飾子] static プロパティ名:型注釈 = 値;*/
/*静的プロパティは、全てのインスタンスインスタンスが共有する(クラスに従属する)プロパティなので、
　インスタンスを生成しなくてもクラス名をつけるだけで参照できる。逆にいうと、インスタンスからは
　参照できない。
　次の例は、全てのDrinkインスタンスに共通する税率の値をDrinkクラスの静的プロパティTAX_RATE
　として定義している。*/
class Drink{
    public static TAX_RATE:number = 0.1;//税率
    private _price:number;//価格
    //クラス内から参照するから場合も同様。プロパティの前にthisではなくクラス名をつけることに注意
    getPrice():number{
        return Math.floor(this._price*(1+Drink.TAX_RATE));
    }
}
console.log(Drink.TAX_RATE);//->0.1

/*const milk = new Drink("牛乳");
console.log(milk.TAX_RATE);//コンパイルエラー*/

//静的プロパティの初期化
/*静的プロパティは、インスタンスによらず常に同じ値(定数)をクラスに備えたい場合に定義する。そのため、
　上記のように宣言と同時に初期値を代入するのが一般的である。もちろん、コンストラクタの中で初期値を
　代入することも可能である。*/