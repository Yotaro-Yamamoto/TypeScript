//任意のデータ型と互換するany型
/*
any型を使うと、どのような型とも相互変換が可能になる。
たとえば、関数が日受ける引数をany型にすると、どのような型の引数を渡しても
コンパイルできてしまう。一見すると、型の制限が緩くなるので汎用性が高まりそうだが、
プログラムを実行したときに、エラーが発生したり意図しない動作をする原因になる。
*/
function scoring(score:any):string{
    if(score>=80){
        return "合格です。";
    }else{
        return "不合格です。";
    }
}

/*⓵*/console.log(scoring(90));
/*⓶*/console.log(scoring("90"));
/*⓷*/console.log(scoring("90点"));
/* 
型注釈が存在しないJavaScriptでは、文字列と数値を演算するとき、
数値に変換できる文字列は暗黙的に変換されるので、⓶の場合は数値に変換できる。
⓷の場合は数値に変換できないので、score>=80の判定結果がfalseになり、不合格
になってしまう。
any型は関数のみならず型注釈の様々な場面で使用可能だが、TypeScriptを浮かう意義が
なくなってしまうので、なるべく使用は避けたほうがいい。
*/